# Generated by Django 4.2.2 on 2023-10-05 05:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('city_name', models.CharField(default='Default City', max_length=100, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Deviation_Value',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('value', models.CharField(choices=[('1', '35~45'), ('2', '46~55'), ('3', '56~65'), ('4', '66以上')], max_length=50)),
                ('city', models.ManyToManyField(blank=True, related_name='deviation_values_set', to='boards.city')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100, verbose_name='タイトル')),
                ('content', models.TextField(verbose_name='本文')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='boards.city')),
                ('deviation_value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='boards.deviation_value')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Prefecture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('prefecture_name', models.CharField(choices=[('愛知', '愛知'), ('岐阜', '岐阜'), ('三重', '三重')], max_length=255, null=True, unique=True)),
                ('deviation_value', models.ManyToManyField(blank=True, related_name='related_prefectures', to='boards.deviation_value')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('value', models.IntegerField(blank=True, choices=[(1, '★'), (2, '★★'), (3, '★★★'), (4, '★★★★'), (5, '★★★★★')], default='3', unique=True, verbose_name='boards.Scores')),
                ('city', models.ManyToManyField(blank=True, to='boards.city')),
                ('users', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('value', 'users')},
            },
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.TextField(verbose_name='本文')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='boards.city')),
                ('deviation_value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='boards.deviation_value')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='boards.post')),
                ('prefecture', models.ManyToManyField(blank=True, to='boards.prefecture')),
                ('score', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='boards.score')),
                ('users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('school_name', models.CharField(max_length=50, null=True, unique=True)),
                ('city', models.ManyToManyField(blank=True, to='boards.city')),
                ('deviation_values', models.ManyToManyField(blank=True, related_name='schools', to='boards.deviation_value')),
                ('prefecture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='schools', to='boards.prefecture')),
                ('score', models.ManyToManyField(blank=True, to='boards.score')),
                ('users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='prefecture',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_prefecture_schools', to='boards.school'),
        ),
        migrations.AddField(
            model_name='prefecture',
            name='users',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='prefecture',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='boards.prefecture'),
        ),
        migrations.AddField(
            model_name='post',
            name='school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_posts', to='boards.school'),
        ),
        migrations.AddField(
            model_name='post',
            name='score',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='boards.score'),
        ),
        migrations.AddField(
            model_name='deviation_value',
            name='prefecture',
            field=models.ManyToManyField(related_name='deviation_values_set', to='boards.prefecture'),
        ),
        migrations.AddField(
            model_name='deviation_value',
            name='school',
            field=models.ManyToManyField(related_name='deviation_value_schools_set', to='boards.school'),
        ),
        migrations.AddField(
            model_name='deviation_value',
            name='users',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='city',
            name='deviation_value',
            field=models.ManyToManyField(blank=True, related_name='related_citys', to='boards.deviation_value'),
        ),
        migrations.AddField(
            model_name='city',
            name='prefecture',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='boards.prefecture'),
        ),
        migrations.AddField(
            model_name='city',
            name='users',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
        ),
    ]
